from transformers import AutoTokenizer, AutoModelForSequenceClassification, pipeline

# === 1. Carregar modelo treinado ===
#model_path = "../emotion-model/final"
tokenizer = AutoTokenizer.from_pretrained(model_path)
model = AutoModelForSequenceClassification.from_pretrained(model_path)

# === 2. Criar pipeline de classifica√ß√£o ===
clf = pipeline("text-classification", model=model, tokenizer=tokenizer, return_all_scores=True)

# === 3. Simular intera√ß√µes de operadores com clientes ===
interacoes = [
    "Ol√°, tudo bem? Estou te ligando para falar sobre uma oportunidade exclusiva.",
    "Senhor, se n√£o fechar hoje, voc√™ vai perder a promo√ß√£o.",
    "Agrade√ßo muito pela sua aten√ß√£o, qualquer coisa estou √† disposi√ß√£o.",
    "N√£o posso te ajudar com isso, tente outro canal, por favor.",
    "Fique tranquilo, vou resolver isso pra voc√™ agora mesmo!",
    "O produto j√° foi enviado, mas n√£o √© minha responsabilidade se houver atraso.",
    "Voc√™ gostaria de receber por e-mail ou WhatsApp?",
    "Infelizmente n√£o posso fazer nada.",
    "[SPEAKER_00] Bom, vou te enviar um √°udio porque eu acho mais f√°cil e eu tamb√©m acho mais confort√°vel.",
    "[SPEAKER_00] Obrigado.",
    "[SPEAKER_00] Eu n√£o quis transmitir como um ultimato. Eu quis transmitir como um transmissor. As condi√ß√µes s√£o tipo, gente, a gente tem que acertar.",
    "[SPEAKER_00] as coisas, mas n√£o tipo assim, mano, se voc√™ errar, acabou, t√° ligado? At√© porque nada vai ser s√≥ de certo, tipo, n√£o existe isso, n√©? N√£o √© o que tava na minha cabe√ßa. Acho que o que tava na minha cabe√ßa s√£o as insist√™ncias em erros, tipo, p√¥, se a gente come√ßar a afastar de novo. A√≠ sim, tipo assim, mas const√¢ncia, sabe? Tipo assim, n√£o √© sobre ir do zero ao 100, mas tipo assim, sobre as escolhas de adas que a gente vai fazer de estar perto, sabe? Ent√£o n√£o era para ser um timato, t√° bom? Era para ser realmente, tipo assim, vamos saber se √© um norte para a gente alcan√ßar e caminhar em dire√ß√£o a ele juntos. Se n√£o for caminhar em dire√ß√£o a ele, a√≠ a gente repensa as rotas, entendeu? Mas n√£o um timato, √© que eu quis te dar uma resposta clara para n√£o te deixar uma resposta vaga, n√©? Que eu n√£o queria te deixar ansioso, ent√£o talvez n√£o tenha me expressado da melhor forma, mas foi mais ou menos isso que eu pensei."
]

# === 4. Rodar predi√ß√µes ===
for frase in interacoes:
    print(f"\nüó£Ô∏è Frase: {frase}")
    resultados = clf(frase)[0]
    resultados = sorted(resultados, key=lambda x: x["score"], reverse=True)
    for item in resultados[:3]:  # Mostra top 3 emo√ß√µes
        print(f" - {item['label']}: {item['score']:.2%}")
